name: Run pytest

on:
  pull_request:
    branches:
      - '**/ch_*'
    types:
      - opened
      - synchronize

jobs:

  extract_chapter:
    runs-on: ubuntu-latest

    outputs:
      chapter: ${{ steps.extract.outputs.chapter }}

    steps:
    - name: Extract Chapter
      id: extract
      run: echo "chapter=$(echo '$GITHUB_BASE_REF' | sed 's|refs/heads/||' | cut -d/ -f2-)" >> $GITHUB_OUTPUT
    - name: Prink Chapter
      run: echo ${{ steps.extract.outputs.chapter }}
      
  test:
    runs-on: ubuntu-latest
    needs: extract_chapter

    strategy:
      matrix:
        python-version:
          - '3.8'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest python-dotenv

    - name: Run pytest
      run: pytest --id=${{ github.actor }} -m ${{ needs.extract_chapter.outputs.chapter }}

  review-fail:
    runs-on: ubuntu-latest
    needs: test
    if: failure()
    steps:
    - name: if fail test 
      uses: wow-actions/auto-comment@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        pullRequestSynchronize: |
           ❌ @{{author}} 님. 아쉽습니다.
           
           테스트에 실패했습니다.
           다시 한번 문제를 풀고, `push` 하고 테스트를 통과해보세요!

  review-pass:
    runs-on: ubuntu-latest
    needs: [test, extract_chapter]
    if: success()
    steps:
    - name: if pass test
      uses: wow-actions/auto-comment@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        pullRequestSynchronize: |
            🎉 @{{ author }} 님. 축하 합니다! 
            
            test에 통과했습니다!
            `${{ needs.extract_chapter.outputs.chapter }}` 브랜치에 Merge 해주세요!
    
